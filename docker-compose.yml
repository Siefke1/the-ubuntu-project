version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ubuntu-project-db
    environment:
      POSTGRES_DB: ubuntu_project
      POSTGRES_USER: ubuntu_user
      POSTGRES_PASSWORD: ubuntu_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ubuntu_user -d ubuntu_project"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    container_name: ubuntu-project-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://ubuntu_user:ubuntu_password@postgres:5432/ubuntu_project
      FRONTEND_URL: http://localhost:5173
      JWT_SECRET: your-super-secret-jwt-key-for-development
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ubuntu-project-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ubuntu-project.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
